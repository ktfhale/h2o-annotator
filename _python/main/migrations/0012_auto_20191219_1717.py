# Generated by Django 2.2.9 on 2019-12-19 17:17

from django.db import migrations


def add_owners(apps, schema_editor):
    # N.B. The proxy model 'Casebook' doesn't work here... that actually returns all ContentNodes!
    ContentNode = apps.get_model('main', 'ContentNode')
    ContentCollaborator = apps.get_model('main', 'ContentCollaborator')
    User = apps.get_model('main', 'User')
    new_owner = User.objects.get(email_address='orphaned@opencasebook.org')
    for book in ContentNode.objects.filter(casebook_id__isnull=True).exclude(contentcollaborator__role='owner'):
        ContentCollaborator.objects.create(user=new_owner, content=book, role='owner')

def repair_ownership(apps, schema_editor):
    ContentCollaborator = apps.get_model('main', 'ContentCollaborator')
    User = apps.get_model('main', 'User')
    new_owner = User.objects.get(email_address='orphaned@opencasebook.org')
    broken_collaborations = ContentCollaborator.objects.exclude(user_id__in=User.objects.all().only('id'))
    broken_collaborations.update(user_id=new_owner.id)


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0011_remove_default_created_via_import'),
    ]

    operations = [
        migrations.RunPython(add_owners),
        migrations.RunPython(repair_ownership),
    ]
